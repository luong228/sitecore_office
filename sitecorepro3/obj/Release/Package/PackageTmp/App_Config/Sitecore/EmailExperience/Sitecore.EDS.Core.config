<?xml version="1.0" encoding="utf-8"?>

<!--
Purpose: This include file configures Email delivery service API.
-->
<configuration xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:exmEnabled="http://www.sitecore.net/xmlconfig/exmEnabled/">
  <sitecore exmEnabled:require="yes" role:require="Standalone or ContentManagement or DedicatedDispatch">
    <log4net>
      <logger name="Sitecore.EDS" additivity="false">
        <level value="INFO" />
        <appender-ref ref="EdsLogFileAppender" />
      </logger>
      <appender name="EdsLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging">
        <file value="$(dataFolder)/logs/Eds.log.{date}.txt" />
        <appendToFile value="true" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
        </layout>
        <encoding value="utf-8" />
      </appender>
    </log4net>
    <exm>
      <eds>
        <!-- EDS LOGGER
                    Creates a Logger instance.
                -->
        <edsLogger type="Sitecore.ExM.Framework.Diagnostics.Logger, Sitecore.ExM.Framework" singleInstance="true">
          <param desc="loggerName">Sitecore.EDS</param>
          <param desc="debugEnabled">false</param>
        </edsLogger>

        <!-- LOGGER FACTORY
                    Provides an instance of ILogger.
                -->
        <loggerFactory type="Sitecore.EDS.Core.Diagnostics.LoggerFactory, Sitecore.EDS.Core" singleInstance="true">
          <param ref="exm/eds/edsLogger" />
        </loggerFactory>

        <!-- ENVIRONMENT IDENTIFIER
                    Value identifying current Sitrecore instance.
                -->
        <environmentIdentifier type="Sitecore.EDS.Core.Reporting.EnvironmentId, Sitecore.EDS.Core" singleInstance="true">
          <param desc="environmentId">{CBB24274-F8BF-4F28-AC6D-CEABA5308CA8}</param>
          <param desc="required">false</param>
        </environmentIdentifier>

        <!-- BOUNCED MESSAGES MANAGER
                    Provides an instance of IBounceManager.
                -->
        <bounceManager type="Sitecore.EDS.Core.Reporting.BounceManager, Sitecore.EDS.Core" singleInstance="true" />

        <!-- SPAM COMPLAINTS MANAGER
                    Provides an instance of IComplaintManager.
                -->
        <complaintManager type="Sitecore.EDS.Core.Reporting.ComplaintManager, Sitecore.EDS.Core" singleInstance="true" />

        <!-- LIST UNSUBSCRIBE MANAGER
                    Provides an instance of IListUnsubscribeManager.
                -->
        <listUnsubscribeManager type="Sitecore.EDS.Core.Reporting.ListUnsubscribeManager, Sitecore.EDS.Core" singleInstance="true" />

        <!-- DISPATCHING MANAGER
                    Provides an instance of IDispatchManager.
                -->
        <dispatchManager type="Sitecore.EDS.Core.Dispatch.DispatchManager, Sitecore.EDS.Core" singleInstance="true" />

        <!-- SUPPRESSION MANAGER
                    Provides an instance of ISuppressionManager.
                -->
        <suppressionManager type="Sitecore.EDS.Core.Reporting.SuppressionManager, Sitecore.EDS.Core" singleInstance="true" />

        <!-- APPROVED SENDERS MANAGER
                    Provides an instance of ISenderManager.
                -->
        <senderManager type="Sitecore.EDS.Core.Senders.SenderManager, Sitecore.EDS.Core" singleInstance="true" />
      </eds>
    </exm>

    <services>
      <!-- Configurator used by EXM to register required services -->
      <configurator type="Sitecore.EDS.Core.DependencyInjection.CustomServiceConfigurator, Sitecore.EDS.Core" />
    </services>

    <settings>
      <!-- MAXIMUM NUMBER OF MESSAGES PER CONNECTION
                Best practice is to reuse connections for no more than 10000 messages and then create a new connection. This allows local and remote resources to be cleaned up efficiently.
                Default: 10000.
            -->
      <setting name="EXM.ChilkatTransportClient.MessagesPerConnection" value="10000" />
    </settings>

    <TransientFaultHandling>
      <Retryers>
        <!-- Retryer to send messages over SMTP. -->
        <EmailCampaign.EDS.Core.Net.Smtp.Send.Retryer>
          <Type>Sitecore.EDS.Core.TransientFaultHandling.RetryerFactories.SmtpSendExponentialRetryerFactory, Sitecore.EDS.Core</Type>
          <!-- <Type>Sitecore.EDS.Core.TransientFaultHandling.RetryerFactories.SmtpSendFixedRetryerFactory, Sitecore.EDS.Core</Type> -->
          <Options>
            <ExponentialRetry>
              <MaxAttempts>10</MaxAttempts>
              <MinBackoff>00:00:01</MinBackoff>
              <MaxBackoff>00:00:30</MaxBackoff>
              <DeltaBackoff>00:00:10</DeltaBackoff>
            </ExponentialRetry>
            <!--
            <FixedRetry>
              <RetryCount>3</RetryCount>
              <RetryInterval>00:00:01</RetryInterval>
              <FirstFastRetry>false</FirstFastRetry>
            </FixedRetry>
            -->
            <TransientSmtpErrorCodes>
              <ServiceIsNotAvailable>421</ServiceIsNotAvailable>
            </TransientSmtpErrorCodes>
          </Options>
        </EmailCampaign.EDS.Core.Net.Smtp.Send.Retryer>
        <!-- Retryer to validate SMTP connection. -->
        <EmailCampaign.EDS.Core.Net.Smtp.ValidateConnection.Retryer>
          <Type>Sitecore.EDS.Core.TransientFaultHandling.RetryerFactories.SmtpValidateFixedRetryerFactory, Sitecore.EDS.Core</Type>
          <Options>
            <FixedRetry>
              <RetryCount>3</RetryCount>
              <RetryInterval>00:00:01</RetryInterval>
              <FirstFastRetry>false</FirstFastRetry>
            </FixedRetry>
          </Options>
        </EmailCampaign.EDS.Core.Net.Smtp.ValidateConnection.Retryer>
      </Retryers>
    </TransientFaultHandling>
  </sitecore>
</configuration>
